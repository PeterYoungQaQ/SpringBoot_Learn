<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
namespace:名称空间，一般是需要保持全局唯一，最好是和dao层的java接口一致，
可以映射sql语句到对应的方法名称和参数返回 类型

mybatis是使用接口动态代理
-->
<mapper namespace="net.peter.online_class.dao.VideoOrderMapper">

    <!-- 利用ResultMap进行多表映射关联查询-->
    <resultMap id="VideoOrderResultMap" type="VideoOrder">

        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="create_time" property="createTime"/>
        <result column="state" property="state"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_title" property="videoTitle"/>
        <result column="video_img" property="videoImg"/>

        <!--
         association 配置属性⼀一对⼀一
         property 对应videoOrder⾥里里⾯面的user属性名
         javaType 这个属性的类型
         -->
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="name" column="name"/>
            <result property="headImg" column="head_img"/>
            <result property="createTime" column="create_time"/>
            <result property="phone" column="phone"/>
        </association>

    </resultMap>

    <!--⼀对⼀管理理查询订单，一个订单只能有一个用户，订单内部包含用户属性-->
    <select id="queryVideoOrderList" resultMap="VideoOrderResultMap">
        select
            o.id,
            o.user_id ,
            o.out_trade_no,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img,
            u.name,
            u.head_img,
            u.create_time,
            u.phone
        from video_order o left join user u on o.user_id = u.id
    </select>

    <!-- 进行多表关联查询-->
    <resultMap id="UserOrderResultMap" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="headImg" column="head_img"/>
        <result property="createTime" column="create_time"/>
        <result property="phone" column="phone"/>
        <!--
        property 填写pojo类中集合类属性的名称
        ofType 集合里面的pojo对象
        -->
        <collection property="videoOrderList" ofType="VideoOrder">
            <!--配置主键，管理order的唯⼀标识-->
            <id column="order_id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="out_trade_no" property="outTradeNo"/>
            <result column="create_time" property="createTime"/>
            <result column="state" property="state"/>
            <result column="total_fee" property="totalFee"/>
            <result column="video_id" property="videoId"/>
            <result column="video_title" property="videoTitle"/>
            <result column="video_img" property="videoImg"/>
        </collection>

    </resultMap>

    <!-- 查询一对多的情况，一个用户可能下单了多个订单-->
    <select id="queryUserOrder" resultMap="UserOrderResultMap">
        select
            u.id,
            u.name,
            u.head_img,
            u.create_time,
            u.phone,
            o.id order_id,
            o.out_trade_no,
            o.user_id,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img
        from user u left join video_order o on u.id = o.user_id
    </select>



    <!-- 利用懒加载的方式，进行多表映射关联查询-->
    <resultMap id="VideoOrderResultMapLazy" type="VideoOrder">

        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="create_time" property="createTime"/>
        <result column="state" property="state"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_title" property="videoTitle"/>
        <result column="video_img" property="videoImg"/>

        <association property="user" javaType="User" column="user_id" select="findUserByUserId"/>


    </resultMap>

    <!--⼀对⼀管理理查询订单，一个订单只能有一个用户，订单内部包含用户属性，使用懒加载的方式-->
    <select id="queryVideoOrderListLazy" resultMap="VideoOrderResultMapLazy">
        select
            o.id,
            o.user_id ,
            o.out_trade_no,
            o.create_time,
            o.state,
            o.total_fee,
            o.video_id,
            o.video_title,
            o.video_img
        from video_order o
    </select>

    <select id="findUserByUserId" resultType="User">

        select * from user where id=#{id}
    </select>

</mapper>